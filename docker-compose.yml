version: "3.9"

networks:
  benign-net:
    driver: bridge
    name: benign-net
    driver_opts:
      com.docker.network.bridge.name: br-benign
    ipam:
      config:
        - subnet: 172.30.0.0/16    # Trafic normal
  attack-net:
    driver: bridge
    name: attack-net
    driver_opts:
      com.docker.network.bridge.name: br-attack
    ipam:
      config:
        - subnet: 172.31.0.0/16

services:
  # ─── Services « victimes » ─────────────────────────
  web:
    image: nginx:alpine
    networks:
      - benign-net
      - attack-net
    ports: ["8080:80"]           # page test http://localhost:8080

  ftp:
    image: fauria/vsftpd
    networks: [benign-net]
    environment:
      - FTP_USER=user
      - FTP_PASS=pass
      - PASV_ADDRESS=172.30.0.10      # adresse interne
      - LOG_STDOUT=Yes
    volumes: [ ./ftpdata:/home/vsftpd ]

  ssh:
    image: hermsi/alpine-sshd
    networks: [benign-net]
    environment:
      - PASSWORD_ACCESS=true       # autoriser mot-de-passe
      - ROOT_PASSWORD=pass         # mot de passe root

  smtp:
    image: bytemark/smtp
    networks: [benign-net]

  # ─── Générateurs de TRAFIC bénin ───────────────────
  benign-http:
    image: curlimages/curl:latest
    networks: [benign-net]
    command: |
      sh -c "while true; do
               curl -s http://web/ > /dev/null
               sleep 1
             done"

  benign-ftp:
    image: curlimages/curl:latest
    networks: [benign-net]
    command: |
      sh -c "while true; do
               curl -s ftp://user:pass@ftp/ > /dev/null
               sleep 2
             done"

  benign-ssh:
    image: alpine:latest
    networks: [ benign-net ]
    command:
      - /bin/sh
      - -c
      - |
        apk add --no-cache openssh-client sshpass
        while true; do
          sshpass -p pass ssh \
            -oStrictHostKeyChecking=no \
            -oUserKnownHostsFile=/dev/null \
            root@ssh 'echo hi' > /dev/null 2>&1 || true
          sleep 3
        done

  attacker-httpflood:
    image: williamyeh/wrk
    networks: [attack-net]
    entrypoint: /bin/sh          # override pour pouvoir boucler
    command: >
      -c 'while true; do
            echo "[+] wrk burst…";
            wrk -t2 -c200 -d60s http://web:80/;
            sleep 5;
          done'

  # ► Siege (HTTP / HTTPS DDoS « benchmark ») en continu
  attacker-ddos:
    image: ubuntu:22.04
    networks: [attack-net]
    command: >
      bash -c "
        set -e
        export DEBIAN_FRONTEND=noninteractive &&
        apt-get update -qq &&
        apt-get install -yqq siege &&
        echo '[+] siege loop…' &&
        while true; do
          siege -q -b -c 200 -t 60S http://web:80/ || true;
          sleep 5;
        done
      "

  # ► UDP / ICMP flood (hping3) – déjà infini par --flood
#  attacker-udp-flood:
#    image: ubuntu:22.04
#    networks: [attack-net]
#    command: >
#      bash -c "
#        export DEBIAN_FRONTEND=noninteractive &&
#        apt-get update -qq &&
#        apt-get install -yqq hping3 iputils-ping &&
#        echo '[+] hping3 UDP flood (Ctrl-C = docker stop)' &&
#        hping3 --udp --flood -d 1400 -p 80 web
#      "

  # ► Port-scan SYN agressif en boucle (30 s de pause)
  attacker-portscan:
    image: ubuntu:22.04
    networks: [attack-net]
    command: >
      bash -c "
        set -e
        export DEBIAN_FRONTEND=noninteractive &&
        apt-get update -qq &&
        apt-get install -yqq nmap &&
        echo '[+] looped SYN scan every 30 s' &&
        while true; do
          TS=\$(date '+%F %T')
          echo \"--- \$TS : scan start ---\"
          nmap -sS -T4 -p- web -oG - | grep -v '^#'
          echo \"--- \$TS : scan end ---\"
          sleep 30
        done
      "
